version: '3.8'

services:
  postgres:
    image: postgres:17.6-alpine
    container_name: reservation-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-reservation}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - reservation-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-reservation}"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: reservation-app
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-reservation}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER:-postgres}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}

      SPRING_LIQUIBASE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-reservation}
      SPRING_LIQUIBASE_USER: ${POSTGRES_USER:-postgres}
      SPRING_LIQUIBASE_PASSWORD: ${POSTGRES_PASSWORD}

      SPRING_PROFILES_ACTIVE: docker
      JWT_SECRET: ${JWT_SECRET}
      JWT_ISSUER: reservation-application
      JWT_ACCESS_TOKEN_EXPIRATION: ${JWT_ACCESS_TOKEN_EXPIRATION:-1814400000}

      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:8080}
      SPRINGDOC_API_DOCS_PATH: ${SPRINGDOC_API_DOCS_PATH:-/v3/api-docs}
      SPRINGDOC_SWAGGER_UI_PATH: ${SPRINGDOC_SWAGGER_UI_PATH:-/swagger-ui}

      JAVA_OPTS: ${JAVA_OPTS:-"-Xms256m -Xmx512m -XX:+UseContainerSupport"}
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/app/logs
    networks:
      - reservation-network

volumes:
  postgres_data:

networks:
  reservation-network:
    driver: bridge
